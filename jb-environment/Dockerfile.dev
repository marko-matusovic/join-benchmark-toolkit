# mmatusovic/python:dev IMAGE

FROM nvidia/cuda:12.1.1-devel-ubuntu20.04

# Install base utilities
RUN apt-get update && \
    apt-get install -y wget && \
    apt-get install -y git && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install more base utilities
RUN apt update && \
    apt install bc

# To avoid interactions install tzdata beforehand
ENV TZ=Europe/Amsterdam
ENV DEBIAN_FRONTEND=noninteractive
RUN echo "Europe/Amsterdam" > /etc/timezone
RUN apt-get install -y tzdata

# # Manual install Nsight compute (Use this instead the boys below, because this works. Don't ask me why the others don't.)
# # In theory most of this should come pre-installed in the img this file is based on, but it doesn't contain nsight compute, this adds it.
# # Update 1: caused nvidia drivers / library mismatch 
# RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-ubuntu2004.pin \
#     && mv cuda-ubuntu2004.pin /etc/apt/preferences.d/cuda-repository-pin-600 \
#     && wget https://developer.download.nvidia.com/compute/cuda/12.1.1/local_installers/cuda-repo-ubuntu2004-12-1-local_12.1.1-530.30.02-1_amd64.deb \
#     && dpkg -i cuda-repo-ubuntu2004-12-1-local_12.1.1-530.30.02-1_amd64.deb \
#     && cp /var/cuda-repo-ubuntu2004-12-1-local/cuda-*-keyring.gpg /usr/share/keyrings/ \
#     && apt-get update \
#     && apt-get -y install cuda

# # NVIDIA Nsight Systems 2020.2.1
# # from this guide
# # https://developer.nvidia.com/blog/nvidia-nsight-systems-containers-cloud/
# RUN apt-get update -y && \
#     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
#         apt-transport-https \
#         ca-certificates \
#         gnupg \
#         wget && \
#     rm -rf /var/lib/apt/lists/*
# RUN wget -qO - https://developer.download.nvidia.com/devtools/repos/ubuntu2004/amd64/nvidia.pub | apt-key add - && \
#     echo "deb https://developer.download.nvidia.com/devtools/repos/ubuntu2004/amd64/ /" >> /etc/apt/sources.list.d/nsight.list && \
#     apt-get update -y && \
#     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
#         nsight-systems-2020.2.1 && \
#     rm -rf /var/lib/apt/lists/* 

# # Nsight Compute 
# # from guide
# # https://developer.nvidia.com/blog/using-nsight-compute-in-containers/
# RUN apt-get update -y && \
#      DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
#          apt-transport-https \
#          ca-certificates \
#          gnupg \
#          wget && \
#      rm -rf /var/lib/apt/lists/*
# RUN  echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /" > /etc/apt/sources.list.d/cuda.list && \
#      wget -qO - https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - && \
#          apt-get update -y && \
#      DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
#          nsight-compute-2020.1.0 && \
#      rm -rf /var/lib/apt/lists/*

# Install miniconda
ENV CONDA_DIR /opt/conda
RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
     /bin/bash ~/miniconda.sh -b -p /opt/conda

# Put conda in path so we can use conda activate
ENV PATH=$CONDA_DIR/bin:$PATH

RUN conda init bash
RUN conda update conda
# RUN conda config --set channel_priority strict

RUN conda install \
    --yes -y \
    --solver=libmamba \
    -c rapidsai -c conda-forge -c nvidia  \
    python=3.10 \
    rapids=23.10 cudf=23.10 cuda-version=11.8 \ 
    pandas \
    numpy \
    pymoo \
    scikit-learn

# For AWS setup
# conda create -n jb --solver=libmamba -c rapidsai -c conda-forge -c nvidia python rapids cudf cuda-version=11.7 pandas numpy pymoo sklearn

WORKDIR /app/join-benchmark

# Build with 
# docker build -t mmatusovic/python:dev -f Dockerfile.dev .
